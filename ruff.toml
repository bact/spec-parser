fix = false
indent-width = 4
line-length = 145
output-format = "full"
# output-format = "grouped"
preview = false
required-version = ">=0.9"
show-fixes = true

[format]
docstring-code-format = false
indent-style = "space"
line-ending = "native"
preview = false
quote-style = "double"
skip-magic-trailing-comma = false

[lint]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
fixable = ["ALL"]
ignore = [ "AIR", "ANN", "D", "NPY", "PD",
	"C408", "C901", "COM812", "EM102", "G004", "ISC001", "RET505", "S101", ]
logger-objects = ["logger", "root_logger"]
preview = false
select = ["ALL"]
unfixable = []

[lint.per-file-ignores]
"spec_parser/__init__.py" = ["F401"]	# unused import in the module definition file
"spec_parser/jsondump.py" = ["ARG001"]	# unused function argument, for cfg
"spec_parser/mdparsing.py" = ["E741"]	# using `(l,r)` pairs
"spec_parser/plantuml.py" = ["E741"]
"spec_parser/model.py" = ["PLC0415"]	# import not on top, since dynamic
"spec_parser/rdf.py" = ["ARG001",	# unused function argument, for cfg
			"F401",		# unused import, for SKOS
			"N806",		# uppercase variable, for OMG_ANN
			"PLR0915",	# too many statements, for gen_rdf_ontology
]
"spec_parser/tex.py" = ["S607"]		# process without full path

[lint.isort]
case-sensitive = true
force-sort-within-sections = false
from-first = false
lines-between-types = 0
split-on-trailing-comma = false

[lint.pylint]
max-branches = 35
max-statements = 65

